<html><head>
		<title>Jan's LightOJ</title>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<link rel="stylesheet" type="text/css" href="traning%206Jan%27s%20LightOJ_files/style.css">
	</head>

	<body lang="EN-US">
<style>
div.tempMessage {
  float: left;
  font-size: 30;
  margin-top: 10px;
  margin-left: 300px;
  position: absolute;
  border: 2px solid white;
  background: yellow;
  border-radius: 5px;
  padding: 2px;
}
div.tempMessage a {
  text-decoration: underline;
  color: red;
}
</style>
<div class="topDiv">
			<img src="traning%206Jan%27s%20LightOJ_files/main.png" class="topImage" style="float: left;">
                <!--<div class="tempMessage"><a href="http://lightoj.com/lightojv2/contest/215/problems" target=_blank>ACM ICPC Dhaka Regionals Online Preliminary Contest is scheduled here.</a></div>!-->
			<div class="topMenuMessage" style="display: block; float: right; padding: 50 5 0 0;">
				Server Time:
				<a class="top_link" target="_blank" href="http://www.timeanddate.com/worldclock/fixedtime.html?iso=20150918T024923">
					Fri Sep 18, 2015 8:49 am				</a>
			</div>
		</div>
		<div class="topMenu" align="center">
			<table width="100%">
				<tbody><tr>
					<td width="10%">
						<div class="topMenuMessage">
							&nbsp;<a class="top_link" href="http://lightoj.com/index.php">
								Home
							</a>
						</div>
					</td>
					<td width="10%">
						<div class="topMenuMessage">
							<a class="top_link" href="http://lightoj.com/volume_problemset.php">
								Volume
							</a>
						</div>
					</td>
					<td width="10%">
						<div class="topMenuMessage">
							<a class="top_link" href="http://lightoj.com/contest_index.php">
								Contest
							</a>
						</div>
					</td>
					<td width="10%">
						<div class="topMenuMessage">
							<a class="top_link" href="http://lightoj.com/article_showcategory.php">Training</a>
						</div>
					</td>
					<td width="10%">
						<div class="topMenuMessage">
							<a class="top_link" href="http://lightoj.com/forum_index.php">Community</a>
						</div>
					</td>
					<td width="10%">
						<div class="topMenuMessage">
							<a class="top_link" href="http://lightoj.com/credits_index.php">Credits</a>
						</div>
					</td>
					<td align="right" width="60%">
						<div class="topMenuMessage">
							Welcome
								<a class="top_link" href="http://lightoj.com/index_edituser.php">
									md. abid								</a>
							(<a class="top_link" href="http://lightoj.com/login_logout.php">
								logout
							</a>)&nbsp;
						</div>
					</td>
				</tr>
			</tbody></table>
		</div>
		<div id="wrapper">
			<div id="problem">
				<div id="problem_name">
					Small Biginteger Library for Contest				</div>
				<div style="border-top: 1px solid #eeeeee; border-bottom: 1px solid #eeeeee;" align="center">
					<table id="mytable" style="width:110;padding: 5 0 5 0;" cellspacing="0">
						<tbody><tr><td class="two" style="border-top: 1px solid #C1DAD7;border-left: 1px solid #C1DAD7;" width="100">
							<a class="user_link" href="http://lightoj.com/article_show.php?article=1004&amp;language=english&amp;type=pdf">
								PDF (English)							</a>
						</td>
					</tr></tbody></table>
				</div>



<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="Generator" content="Microsoft Word 12 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:0in;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
h1
	{mso-style-link:"Heading 1 Char";
	margin-top:24.0pt;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	line-height:115%;
	page-break-after:avoid;
	border:none;
	padding:0in;
	font-size:18.0pt;
	font-family:Consolas;}
h2
	{mso-style-link:"Heading 2 Char";
	margin-top:10.0pt;
	margin-right:0in;
	margin-bottom:6.0pt;
	margin-left:0in;
	line-height:115%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Times New Roman","serif";
	color:#1F497D;}
h3
	{mso-style-link:"Heading 3 Char";
	margin-top:10.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Courier New";}
h4
	{mso-style-link:"Heading 4 Char";
	margin-top:10.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-after:avoid;
	font-size:11.0pt;
	font-family:"Cambria","serif";
	color:#4F81BD;
	font-style:italic;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{mso-style-link:"Header Char";
	margin:0in;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{mso-style-link:"Footer Char";
	margin:0in;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-link:"Balloon Text Char";
	margin:0in;
	margin-bottom:.0001pt;
	font-size:8.0pt;
	font-family:"Tahoma","sans-serif";}
p.MsoNoSpacing, li.MsoNoSpacing, div.MsoNoSpacing
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:.5in;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:10.0pt;
	margin-left:.5in;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
span.HeaderChar
	{mso-style-name:"Header Char";
	mso-style-link:Header;}
span.FooterChar
	{mso-style-name:"Footer Char";
	mso-style-link:Footer;}
span.BalloonTextChar
	{mso-style-name:"Balloon Text Char";
	mso-style-link:"Balloon Text";
	font-family:"Tahoma","sans-serif";}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-link:"Heading 1";
	font-family:Consolas;
	font-weight:bold;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	font-family:"Times New Roman","serif";
	color:#1F497D;
	font-weight:bold;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char";
	mso-style-link:"Heading 3";
	font-family:"Courier New";
	font-weight:bold;}
span.Heading4Char
	{mso-style-name:"Heading 4 Char";
	mso-style-link:"Heading 4";
	font-family:"Cambria","serif";
	color:#4F81BD;
	font-weight:bold;
	font-style:italic;}
.MsoPapDefault
	{margin-bottom:10.0pt;
	line-height:115%;}
 /* Page Definitions */
 @page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>





<div class="Section1">

<p class="MsoNormal" style="text-align:center;line-height:normal" align="center"><b><span style="font-size:24.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">&nbsp;</span></b></p>

<p class="MsoNormal" style="text-align:center;line-height:normal" align="center"><b><span style="font-size:24.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">&nbsp;</span></b></p>

<p class="MsoNormal" style="text-align:center;line-height:normal" align="center"><b><span style="font-size:24.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">&nbsp;</span></b></p>

<p class="MsoNormal" style="text-align:center;line-height:normal" align="center"><b><span style="font-size:24.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">&nbsp;</span></b></p>

<p class="MsoNormal" style="text-align:center;line-height:normal" align="center"><b><span style="font-size:24.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">&nbsp;</span></b></p>

<p class="MsoNormal" style="text-align:center;line-height:normal" align="center"><b><span style="font-size:24.0pt;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">Big Integer
Library</span></b></p>

<p class="MsoNormal" style="text-align:center" align="center"><b><span style="font-size:16.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">by</span></b></p>

<p class="MsoNormal" style="text-align:center" align="center"><b><span style="font-size:16.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">Jane
Alam Jan</span></b></p>

<p class="MsoNormal"><b><span style="font-size:16.0pt;line-height:115%;
font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">&nbsp;</span></b></p>

<b><span style="font-size:16.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"><br style="page-break-before:always" clear="all">
</span></b>

<p class="MsoNormal"><b><span style="font-size:16.0pt;line-height:115%;
font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">&nbsp;</span></b></p>

<div style="border:none;border-bottom:solid windowtext 1.0pt;padding:0in 0in 1.0pt 0in">

<h1>Introduction</h1>

</div>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">Often
we need to write codes which can handle big integer operations. Suppose we have
to add two numbers which can have 1000 digits. Then none of the usual data
types would help. Though it’s not that tough to code, but it’s boring and
tiresome.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">Here
we are giving a Big Integer library which has most of the operations including
some mathematical and conditional operations. Mainly we have focused on some
important facts.</span></p>

<p class="MsoListParagraphCxSpFirst" style="text-align:justify;text-justify:inter-ideograph;
text-indent:-.25in"><span style="font-size:12.0pt;line-height:115%;font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;">1)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">The
size of the code is an issue since if the size is too big then it would take so
much time just to write it in real contests.</span></p>

<p class="MsoListParagraphCxSpMiddle" style="text-align:justify;text-justify:
inter-ideograph;text-indent:-.25in"><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">2)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">Negative
numbers should be supported.</span></p>

<p class="MsoListParagraphCxSpMiddle" style="text-align:justify;text-justify:
inter-ideograph;text-indent:-.25in"><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">3)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">Number
of digits shouldn’t be an issue. If we need more digits we should allocate them
dynamically.</span></p>

<p class="MsoListParagraphCxSpMiddle" style="text-align:justify;text-justify:
inter-ideograph;text-indent:-.25in"><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">4)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">Some
exceptions like division by zero should be reported properly such that related coding
bugs can be found.</span></p>

<p class="MsoListParagraphCxSpLast" style="text-align:justify;text-justify:inter-ideograph;
text-indent:-.25in"><span style="font-size:12.0pt;line-height:115%;font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;">5)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">The
code should produce the same result as the basic C++ mathematical operators. For
example, we should output -1 for (-10 % 3) which is also the result found using
C++.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">So,
we will give the code at first. After that we will describe it fully and its
merits and drawbacks.</span></p>

<span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"><br style="page-break-before:always" clear="all">
</span>

<p class="MsoNormal"><span style="font-size:12.0pt;line-height:115%;font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;">&nbsp;</span></p>

<div style="border:none;border-bottom:solid windowtext 1.0pt;padding:0in 0in 1.0pt 0in">

<h1>Code</h1>

</div>

<div style="border:solid windowtext 1.0pt;padding:1.0pt 1.0pt 1.0pt 1.0pt">

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:green">// header files</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:green">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:blue">#include</span><span style="font-size:10.0pt;font-family:&quot;Courier New&quot;"> <span style="color:#A31515">&lt;cstdio&gt;</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:blue">#include</span><span style="font-size:10.0pt;font-family:&quot;Courier New&quot;"> <span style="color:#A31515">&lt;string&gt;</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:blue">#include</span><span style="font-size:10.0pt;font-family:&quot;Courier New&quot;"> <span style="color:#A31515">&lt;algorithm&gt;</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:blue">#include</span><span style="font-size:10.0pt;font-family:&quot;Courier New&quot;"> <span style="color:#A31515">&lt;iostream&gt;</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:#A31515">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:blue">using</span><span style="font-size:10.0pt;font-family:&quot;Courier New&quot;"> <span style="color:blue">namespace</span>
std;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:blue">struct</span><span style="font-size:10.0pt;font-family:&quot;Courier New&quot;"> Bigint {</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:green">//
representations and structures</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; string a; <span style="color:green">// to
store the digits</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:blue">int</span> sign;
<span style="color:green">// sign = -1 for negative numbers, sign = 1 otherwise</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:green">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:green">// constructors</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; Bigint() {} <span style="color:green">//
default constructor</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; Bigint( string b ) { (*<span style="color:blue">this</span>) = b; } <span style="color:green">// constructor
for string</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:green">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:green">// some helpful
methods</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:blue">int</span>
size() { <span style="color:green">// returns number of digits</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">return</span>
a.size();</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; }</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; Bigint inverseSign() { <span style="color:green">// changes the sign</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sign *= -1;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">return</span>
(*<span style="color:blue">this</span>);</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; }</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; Bigint normalize( <span style="color:
blue">int</span> newSign ) { <span style="color:green">// removes leading 0,
fixes sign</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">for</span>( <span style="color:blue">int</span> i = a.size() - 1; i &gt; 0 &amp;&amp; a[i] == <span style="color:#A31515">'0'</span>; i-- )</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a.erase(a.begin() + i);</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sign = ( a.size() == 1 &amp;&amp;
a[0] == <span style="color:#A31515">'0'</span> ) ? 1 : newSign;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">return</span>
(*<span style="color:blue">this</span>);</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; }</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:green">// assignment
operator</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:blue">void</span> <span style="color:blue">operator</span> = ( string b ) { <span style="color:green">//
assigns a string to Bigint</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a = b[0] == <span style="color:#A31515">'-'</span>
? b.substr(1) : b;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; reverse( a.begin(), a.end() );</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">this</span>-&gt;normalize(
b[0] == <span style="color:#A31515">'-'</span> ? -1 : 1 );</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; }</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp; &nbsp;<span style="color:green">// conditional
operators</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:blue">bool</span> <span style="color:blue">operator</span> &lt; ( <span style="color:blue">const</span>
Bigint &amp;b ) <span style="color:blue">const</span> { <span style="color:
green">// less than operator</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">if</span>(
sign != b.sign ) <span style="color:blue">return</span> sign &lt; b.sign;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">if</span>(
a.size() != b.a.size() )</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">return</span>
sign == 1 ? a.size() &lt; b.a.size() : a.size() &gt; b.a.size();</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">for</span>( <span style="color:blue">int</span> i = a.size() - 1; i &gt;= 0; i-- ) <span style="color:blue">if</span>( a[i] != b.a[i] )</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">return</span>
sign == 1 ? a[i] &lt; b.a[i] : a[i] &gt; b.a[i];</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">return</span>
<span style="color:blue">false</span>;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; }</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:blue">bool</span> <span style="color:blue">operator</span> == ( <span style="color:blue">const</span>
Bigint &amp;b ) <span style="color:blue">const</span> { <span style="color:
green">// operator for equality</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">return</span>
a == b.a &amp;&amp; sign == b.sign;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; }</span></p>

</div>

<span style="font-size:10.0pt;line-height:115%;font-family:&quot;Courier New&quot;"><br style="page-break-before:always" clear="all">
</span>

<p class="MsoNormal"><span style="font-size:10.0pt;line-height:115%;font-family:
&quot;Courier New&quot;">&nbsp;</span></p>

<div style="border:solid windowtext 1.0pt;padding:1.0pt 1.0pt 1.0pt 1.0pt">

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:green">// mathematical
operators</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; Bigint <span style="color:blue">operator</span>
+ ( Bigint b ) { <span style="color:green">// addition operator overloading</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">if</span>(
sign != b.sign ) <span style="color:blue">return</span> (*<span style="color:blue">this</span>) - b.inverseSign();</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Bigint c;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">for</span>(<span style="color:blue">int</span> i = 0, carry = 0; i&lt;a.size() || i&lt;b.size()
|| carry; i++ ) {</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; carry+=(i&lt;a.size() ? a[i]-48 :
0)+(i&lt;b.a.size() ? b.a[i]-48 : 0);</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c.a += (carry % 10 + 48);</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; carry /= 10;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">return</span>
c.normalize(sign);</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; }</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; Bigint <span style="color:blue">operator</span>
- ( Bigint b ) { <span style="color:green">// subtraction operator overloading</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">if</span>(
sign != b.sign ) <span style="color:blue">return</span> (*<span style="color:blue">this</span>) + b.inverseSign();</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">int</span> s
= sign; sign = b.sign = 1;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">if</span>(
(*<span style="color:blue">this</span>) &lt; b ) <span style="color:blue">return</span>
((b - (*<span style="color:blue">this</span>)).inverseSign()).normalize(-s);</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Bigint c;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color:blue">for</span>( <span style="color:blue">int</span> i = 0, borrow = 0; i &lt; a.size(); i++ ) {</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; borrow = a[i] - borrow - (i &lt;
b.size() ? b.a[i] : 48);</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c.a += borrow &gt;= 0 ? borrow +
48 : borrow + 58;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; borrow = borrow &gt;= 0 ? 0 : 1;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">return</span>
c.normalize(s);</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; }</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; Bigint <span style="color:blue">operator</span>
* ( Bigint b ) { <span style="color:green">// multiplication operator
overloading</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Bigint c(<span style="color:#A31515">"0"</span>);</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">for</span>( <span style="color:blue">int</span> i = 0, k = a[i] - 48; i &lt; a.size(); i++, k =
a[i] - 48 ) {</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">while</span>(k--)
c = c + b; <span style="color:green">// ith digit is k, so, we add k times</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.a.insert(b.a.begin(), <span style="color:#A31515">'0'</span>); <span style="color:green">// multiplied by
10</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">return</span>
c.normalize(sign * b.sign);</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; }</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; Bigint <span style="color:blue">operator</span>
/ ( Bigint b ) { <span style="color:green">// division operator overloading</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">if</span>(
b.size() == 1 &amp;&amp; b.a[0] == <span style="color:#A31515">'0'</span> )
b.a[0] /= ( b.a[0] - 48 );</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Bigint c(<span style="color:#A31515">"0"</span>),
d;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">for</span>( <span style="color:blue">int</span> j = 0; j &lt; a.size(); j++ ) d.a += <span style="color:#A31515">"0"</span>;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">int</span>
dSign = sign * b.sign; b.sign = 1;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">for</span>( <span style="color:blue">int</span> i = a.size() - 1; i &gt;= 0; i-- ) {</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c.a.insert( c.a.begin(), <span style="color:#A31515">'0'</span>);</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c = c + a.substr( i, 1 );</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">while</span>(
!( c &lt; b ) ) c = c - b, d.a[i]++;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">return</span>
d.normalize(dSign);</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; }</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; Bigint <span style="color:blue">operator</span>
% ( Bigint b ) { <span style="color:green">// modulo operator overloading</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">if</span>(
b.size() == 1 &amp;&amp; b.a[0] == <span style="color:#A31515">'0'</span> ) b.a[0]
/= ( b.a[0] - 48 );</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Bigint c(<span style="color:#A31515">"0"</span>);</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b.sign = 1;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">for</span>( <span style="color:blue">int</span> i = a.size() - 1; i &gt;= 0; i-- ) {</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c.a.insert( c.a.begin(), <span style="color:#A31515">'0'</span>);</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c = c + a.substr( i, 1 );</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">while</span>(
!( c &lt; b ) ) c = c - b;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">return</span>
c.normalize(sign);</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; }</span></p>

</div>

<span style="font-size:10.0pt;line-height:115%;font-family:&quot;Courier New&quot;"><br style="page-break-before:always" clear="all">
</span>

<p class="MsoNormal"><span style="font-size:10.0pt;line-height:115%;font-family:
&quot;Courier New&quot;">&nbsp;</span></p>

<div style="border:solid windowtext 1.0pt;padding:1.0pt 1.0pt 1.0pt 1.0pt">

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:green">// output
method</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:blue">void</span>
print() {</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">if</span>(
sign == -1 ) putchar(<span style="color:#A31515">'-'</span>);</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="color:blue">for</span>( <span style="color:blue">int</span> i = a.size() - 1; i &gt;= 0; i-- ) putchar(a[i]);</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; }</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">};</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:blue">int</span><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;"> main() {</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; Bigint a, b, c; <span style="color:green">//
declared some Bigint variables</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:green">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:green">/////////////////////////</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:green">// taking
Bigint input //</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:green">/////////////////////////</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; string input; <span style="color:green">//
string to take input</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:green">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; cin &gt;&gt; input; <span style="color:green">// take the Big integer as string</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; a = input; <span style="color:green">//
assign the string to Bigint a</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:green">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; cin &gt;&gt; input; <span style="color:green">// take the Big integer as string</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; b = input; <span style="color:green">//
assign the string to Bigint b</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; </span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:green">//////////////////////////////////</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:green">// Using
mathematical operators //</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:green">//////////////////////////////////</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:green">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; c = a + b; <span style="color:green">//
adding a and b</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; c.print(); <span style="color:green">//
printing the Bigint</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; puts(<span style="color:#A31515">""</span>);
<span style="color:green">// newline</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:green">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; c = a - b; <span style="color:green">//
subtracting b from a</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; c.print(); <span style="color:green">//
printing the Bigint</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; puts(<span style="color:#A31515">""</span>);
<span style="color:green">// newline</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:green">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; c = a * b; <span style="color:green">//
multiplying a and b</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; c.print(); <span style="color:green">//
printing the Bigint</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; puts(<span style="color:#A31515">""</span>);
<span style="color:green">// newline</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:green">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; c = a / b; <span style="color:green">//
dividing a by b</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; c.print(); <span style="color:green">//
printing the Bigint</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; puts(<span style="color:#A31515">""</span>);
<span style="color:green">// newline</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:green">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; c = a % b; <span style="color:green">// a
modulo b</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; c.print(); <span style="color:green">//
printing the Bigint</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; puts(<span style="color:#A31515">""</span>);
<span style="color:green">// newline</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:green">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:green">/////////////////////////////////</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:green">// Using conditional
operators //</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:green">/////////////////////////////////</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;;color:green">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:blue">if</span>( a ==
b ) puts(<span style="color:#A31515">"equal"</span>); <span style="color:green">// checking equality</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:blue">else</span>
puts(<span style="color:#A31515">"not equal"</span>);</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:blue">if</span>( a
&lt; b ) puts(<span style="color:#A31515">"a is smaller than b"</span>);
<span style="color:green">// checking less than operator</span></span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:0in;margin-bottom:.0001pt;line-height:
normal;text-autospace:none;border:none;padding:0in"><span style="font-size:
10.0pt;font-family:&quot;Courier New&quot;">&nbsp;&nbsp;&nbsp; <span style="color:blue">return</span> 0;</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph;
border:none;padding:0in"><span style="font-size:10.0pt;line-height:115%;
font-family:&quot;Courier New&quot;">}</span></p>

</div>

<div style="border:none;border-bottom:solid windowtext 1.0pt;padding:0in 0in 1.0pt 0in">

<h1>Documentation</h1>

</div>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">Here
we will describe the full idea behind the code. Mostly some parts of the codes
are compact just to make it relatively small. Before going the details of the
operators, we first describe the representations and structures.</span></p>

<h2>Representations and Structures</h2>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">We
used a structure </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">Bigint</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> for the big integer operations. In
</span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
we used two variables.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">string a:</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
stores the big integer digits in decimal number system. It contains digits only
for both positive and negative numbers. We used </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">string</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
because it can hold arbitrary size. So, the number of digits will not be an
issue.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">int sign:</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
represents whether the big integer is negative or not. If the value of </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">sign</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
is -1 then it contains a negative integer. Otherwise if the value is 1 then the
integer can be positive or zero.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">When
we add, multiply or subtract integers we start from the right most digit or we
can say we start from the least significant digit. After that we iterate left
for rest of the calculations. That’s why we store the digits in reversed form
in ‘</span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:
115%">a</span></span><span style="font-size:12.0pt;line-height:115%;font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;">’. So, to add, subtract or multiply we can start
from left.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">Instead
of using methods, we overloaded some of the mathematical and conditional
operators to simplify the usability of the code.</span></p>

<h2>Constructors</h2>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">There
are two constructors.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint():</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
is the default constructor.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint(
string b ):</span></span><span style="font-size:12.0pt;line-height:115%;
font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> uses assignment operator </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">=</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
such that the </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">Bigint</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> contains the string.</span></p>

<h2>Some Helpful Methods</h2>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">There
are three methods in this section.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">size():</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
returns the number of digits of the Big integer. Since we store the digits in ‘</span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">a</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">’,
so the length of ‘</span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">a</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">’ is actually the number of digits
of the </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">Bigint</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">inverseSign():</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
actually changes the sign from 1 to -1, or from -1 to 1. It has many uses. For
example it’s helpful for addition between a positive and a negative number. In
this case we can use subtraction changing one of the numbers </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">sign</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">normalize(
int newSign ):</span></span><span style="font-size:12.0pt;line-height:115%;
font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> normalizes a </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.
It actually removes leading zeroes from the big integer as well as it fixes the
</span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">sign</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
of the big integer according to </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">newSign</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.
It’s normally used for subtractions or multiplications. Say we subtract 99 from
100. Usual calculations will find 01 as the result. After normalization the
result will be 1.</span></p>

<h2>Assignment Operator</h2>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">void
operator = ( string b ):</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> it helps to store string b in the </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.
What it does it quite simple. If </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">b</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
is negative then we store </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">b[1..end]</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
to </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:
115%">a</span></span><span style="font-size:12.0pt;line-height:115%;font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;">. Otherwise we store whole </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">b[0..end]</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
to </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:
115%">a</span></span><span style="font-size:12.0pt;line-height:115%;font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;">. After that we find the correct </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">sign</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
and we return the normalized </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.</span></p>

<h2>Conditional Operators</h2>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">We
actually implemented two operators. We can easily add conditional operators,
but to make the code compact we ignored them.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">bool
operator &lt; ( const Bigint &amp;b ) const:</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
returns true if the current </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
is less than </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">Bigint b</span></span><span style="font-size:12.0pt;
line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">. We have used </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">const</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
since we actually used the reference of </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">b</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">,
so, if we accidentally change </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">b</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
it would be a problem, but </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">const</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
will prevent it. This function is defined such that STL </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">sort()</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
can be used easily.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">The
idea of this function is simple. First we check the both the </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">signs</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.
If they are different then we can find the result based on sign. Otherwise we
check numbers of digits of them. If they are different, then if they are
negative numbers then the </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
with greater size will be smaller. Otherwise if they are positive numbers then
the smaller sized </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">Bigint</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> is smaller.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">Now
if their numbers of digits are also same, then we iterate from right and based
on the digit and sign we find the smaller number. If they are positive numbers
then the number containing smaller digit is smaller. For negative numbers the
case is opposite. If the right most digits are equal then we still iterate to
left until we find unequal digits.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">bool
operator == ( const Bigint &amp;b ) const:</span></span><span style="font-size:
12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> it checks the
equality of two </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">Bigints</span></span><span style="font-size:12.0pt;
line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">. It’s quite simple. If
both the signs and the containing digits are equal then they are considered as
equal.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">Only
these two conditional operators are listed because we can derive the other
operators using these two operators. For example </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">(a &gt; b)</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
can be written as </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">(b &lt; a)</span></span><span style="font-size:12.0pt;
line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">, </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">(a &lt;= b)</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
can be written as </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">(a &lt; b || a == b)</span></span><span style="font-size:
12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">, </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">(a != b)</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
can be written as </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">(!(a == b))</span></span><span style="font-size:12.0pt;
line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">If
we think that you need more conditional operators to make things easier, you
can easily overload some operators as well.</span></p>

<span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"><br style="page-break-before:always" clear="all">
</span>

<p class="MsoNormal"><span style="font-size:12.0pt;line-height:115%;font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;">&nbsp;</span></p>

<h2>Mathematical Operators</h2>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">Five
of the main mathematical operators are overloaded here such as </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">+, -, *, /</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
and </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:
115%">%</span></span><span style="font-size:12.0pt;line-height:115%;font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;">.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint
operator + ( Bigint b ):</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> returns the </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
after adding </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">Bigint b</span></span><span style="font-size:12.0pt;
line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> with the </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
which initiates the operator. Here we have used the basic addition technique
which we are using from childhood. Since the digits are stored in reversed
fashion we start from left with no carry. After that we add digits and form
carry and continue the procedure until we have no digits left. Throughout the
process we saved the resulting digits to a new </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
and finally we return that </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">Since
here we are thinking of both positive and negative numbers, so, before adding
we see their signs. If they are different then we change one of the sign and
use subtraction. Otherwise we used the addition technique we have just
described. We return the normalized </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
for safety and perfection. The complexity for addition is </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">O(n)</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint
operator - ( Bigint b ):</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> returns the Bigint after subtracting
</span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">b</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
from the operator initiator </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.
The subtraction idea is also our childhood idea. We start from the leftmost
digit (since we saved them in reversed order). After that we calculate borrow
and iterate right. Finally we return the new normalized </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">Again
if both the signs are different then we don’t have to use subtraction. We
change the sign of </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">b</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> and return the addition result
with </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:
115%">b</span></span><span style="font-size:12.0pt;line-height:115%;font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;">. The complexity for subtraction is </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">O(n)</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint
operator * ( Bigint b ):</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> returns the multiplication of the </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigints</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.
The idea we have used for multiplication is a bit different than we have used
it our childhood. The main theme is same but the implementation is different.
The idea is that suppose we want to multiply </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">a</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
and </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:
115%">b</span></span><span style="font-size:12.0pt;line-height:115%;font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;">. Now we take </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">c = 0</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.
After that we start from the rightmost digit of </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">a</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.
If this digit is </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">k</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> then we add </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">b</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
to </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:
115%">c</span></span><span style="font-size:12.0pt;line-height:115%;font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;">, </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">k</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
times. After that we multiply </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">b</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
with </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:
115%">10</span></span><span style="font-size:12.0pt;line-height:115%;
font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> and we take the second rightmost digit
of </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:
115%">a</span></span><span style="font-size:12.0pt;line-height:115%;font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;">. If this digit is </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">p</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
then we add </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">b</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> to </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">c</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">,
</span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">p</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
times. We continue this procedure until no digit is left in </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">a</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.
Since in </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">Bigint</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> we stored digits in reversed
fashion so we start from the leftmost digit and we continue this procedure to
find multiplication result. After that we normalized the result with the
correct sign.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">For
example suppose we want to multiply 123 and 459. Now at first we say the result
is 0. Now we start from taking the rightmost digit of 123. Since the rightmost
digit is 3, we add 459 to result 3 times obtaining 1377 as result. Now we
multiply 459 with 10 to get 4590. Now the next rightmost digit of 123 is 2. So,
we add 4590 two times with 1377 to get 10557. Now again we multiply 4590 with
10 to get 45900. The last digit of 123 is 1, so, we add 45900 with 10557 to get
56457 which is the correct result. The complexity for multiplication is </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">O(n<sup>2</sup>)</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint
operator / ( Bigint b ):</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> performs division. Division by
zero can occur, that’s why if this case occurs we force a division by zero
operation such that the code creates the same exception.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">However
the idea we have used for division is a little bit different from the idea we
used in school arithmetic. Say we want to divide </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">a</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
by </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:
115%">b</span></span><span style="font-size:12.0pt;line-height:115%;font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;">. Let </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">c</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
be the reminder throughout the process and </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">d</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
is the division result. Initially </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">c</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
and </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:
115%">d</span></span><span style="font-size:12.0pt;line-height:115%;font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;"> both are </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">0</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.
Each time we take a digit from left of </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">a</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.
We multiply </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">c</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> with </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">10</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
and then add the digit to form the new reminder. While </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">c</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
is greater than or equal to </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">b</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
we subtract </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">b</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> from </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">c</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
and say we can subtract </span><span class="Heading3Char"><span style="font-size:
12.0pt;line-height:115%">k</span></span><span style="font-size:12.0pt;
line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> times. Then we
multiply </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">d</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> with </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">10</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
and add </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">k</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">. Then after the full iteration, </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">c</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
contains the reminder and </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">d</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
contains the division result.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">For
example suppose we want to divide 4567 with 12. Initially </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">c</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
and </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:
115%">d</span></span><span style="font-size:12.0pt;line-height:115%;font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;"> both are zero. Now multiply </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">c</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
with 10 and add 4 (from </span><span class="Heading3Char"><span style="font-size:
12.0pt;line-height:115%">a</span></span><span style="font-size:12.0pt;
line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">). Now </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">c</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
is 4 which is less than 12. So, </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">k</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
is zero and thus </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">d</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> will be zero. After that </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">c</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
will be 45. Now </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">b</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> can be subtracted from </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">c</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
3 times. So, </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">k</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> = 3. Now </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">d</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
will be 3 and </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">c</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> will be (45 – 12 – 12 – 12) which
is 9. Now in next iteration </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">c</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
will be 96 (multiplied with 10 and added the 3<sup>rd</sup> digit of </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">a</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
from left). So, we can subtract </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">b</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
from </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:
115%">c</span></span><span style="font-size:12.0pt;line-height:115%;font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;"> 8 times. So, </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">k</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
will be 8. So, </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">d</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> will be 38 (multiplied with 10 and
added 8) and </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">c</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> will be 0. Finally after adding
the last digit of </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">a</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">, </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">c</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
will be 7 which is less than 12. So, </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">k</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
will be zero and </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">d</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> will be 380 (multiplied with 10
and added 0). So, the division result is 380 and reminder is 7. The Complexity
for division is </span><span class="Heading3Char"><span style="font-size:12.0pt;
line-height:115%">O(n<sup>2</sup>)</span></span><span style="font-size:12.0pt;
line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.</span></p>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint
operator % ( Bigint b ):</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> returns the modulo result by </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint b</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.
The procedure is same as the division method. Actually when finding the
division result we find the reminder, too. The complexity is same as division,
thus </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:
115%">O(n<sup>2</sup>)</span></span><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.</span></p>

<h2>Output Method</h2>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">void
print():</span></span><span style="font-size:12.0pt;line-height:115%;
font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"> prints the </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.
Actually it prints the sign if needed, and the numbers from </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">string a</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">
in reversed order. Since we have stored the numbers in reversed order, so, if
we print them in reversed order we get the right result.</span></p>

<h2>main() function</h2>

<p class="MsoNormal" style="text-align:justify;text-justify:inter-ideograph"><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">In
main() function we have shown some examples of how to use the </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">Bigint</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">.
Since the operators are overloaded, expressions like </span><span class="Heading3Char"><span style="font-size:12.0pt;line-height:115%">(a * b + (d
- e))</span></span><span style="font-size:12.0pt;line-height:115%;font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;"> can be used where the precedence of operators will
remain correct.</span></p>

<span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;"><br style="page-break-before:always" clear="all">
</span>

<p class="MsoNormal"><span style="font-size:12.0pt;line-height:115%;font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;">&nbsp;</span></p>

<div style="border:none;border-bottom:solid windowtext 1.0pt;padding:0in 0in 1.0pt 0in">

<h1>Drawbacks</h1>

</div>

<p class="MsoListParagraphCxSpFirst" style="text-align:justify;text-justify:inter-ideograph;
text-indent:-.25in"><span style="font-size:12.0pt;line-height:115%;font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;">1)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">Don’t
expect the code to be too efficient. There are faster ways to do
multiplications. You may search for <b>Karatsuba Algorithm</b> for faster
multiplications.</span></p>

<p class="MsoListParagraphCxSpMiddle" style="text-align:justify;text-justify:
inter-ideograph;text-indent:-.25in"><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">2)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">The
base we have used is 10. So, we can use only 0 to 9. If we change the base of
the numbers to store then the length of the numbers will be small. For example
if the base is 10000 then 12345678 will need only two digits, where in decimal
base it needs 8 digits. If the length is small then multiplications and
divisions can be done faster.</span></p>

<p class="MsoListParagraphCxSpMiddle" style="text-align:justify;text-justify:
inter-ideograph;text-indent:-.25in"><span style="font-size:12.0pt;line-height:
115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">3)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">Some
parts are too compact. So, be careful when writing it.</span></p>

<p class="MsoListParagraphCxSpLast" style="text-align:justify;text-justify:inter-ideograph;
text-indent:-.25in"><span style="font-size:12.0pt;line-height:115%;font-family:
&quot;Times New Roman&quot;,&quot;serif&quot;">4)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style="font-size:12.0pt;line-height:115%;font-family:&quot;Times New Roman&quot;,&quot;serif&quot;">We
have not overloaded some operators like we haven’t even added the assignment operator
for integers. If you need it you may convert the integers to strings and then
you can use the assignment operator.</span></p>

</div>




				<hr style="color: #717171; height: .5px;">

				<div id="problem_setter">
					Author: Jane Alam Jan				</div>
			</div>
		</div>
<div class="bottomDiv" align="center">
	<table width="100%">
		<tbody><tr>
			<td width="50%">
				<div class="midMessage">
					Developed and Maintained by
					<br><b>JANE ALAM JAN</b>
				</div>

			</td>
			<td width="50%">
				<div class="midMessage">
					Copyright © 2012
					<br><b>LightOJ, Jane Alam Jan</b>
				</div>

			</td>
		</tr>
	</tbody></table>
</div>
	

</body></html>